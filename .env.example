# WiFi Configuration for Build-Time Defaults
# cSpell:ignore mavlink thumbv eabihf defmt
#
# Copy this file to .env and configure your WiFi credentials.
# The .env file is gitignored to prevent accidental credential leakage.
#
# These environment variables set DEFAULT values at build time.
# They are embedded in the firmware as initial parameter values.
#
# Benefits:
# - No need to configure WiFi via UART on first boot
# - Device connects to WiFi immediately after flashing
# - Can still change parameters later via MAVLink
#
# Security Warning:
# - WiFi credentials are stored UNENCRYPTED in firmware binary
# - Anyone with firmware access can extract credentials
# - Use device-specific WiFi network or strong password

# WiFi SSID (network name, max 32 characters)
WIFI_SSID=MyHomeNetwork

# WiFi Password (WPA2, max 63 characters)
WIFI_PASSWORD=SecurePassword123

# Use DHCP for automatic IP configuration (true/false)
WIFI_DHCP=true

# Static IP configuration (only used if WIFI_DHCP=false)
# WIFI_IP=192.168.1.100
# WIFI_NETMASK=255.255.255.0
# WIFI_GATEWAY=192.168.1.1

# ============================================================================
# Usage Instructions
# ============================================================================

# 1. Copy this file:
#    cp .env.example .env

# 2. Edit .env with your WiFi credentials

# 3. Build with environment variables:
#    ./scripts/build-rp2350.sh --release mavlink_demo_network
#
#    The build script will automatically load .env if present

# 4. Flash to device:
#    probe-rs run --chip RP2350 target/thumbv8m.main-none-eabihf/release/examples/mavlink_demo_network

# 5. Device will connect to WiFi automatically on first boot
#    - Monitor defmt logs for "WiFi connected" message
#    - Note the assigned IP address

# 6. Connect QGroundControl via UDP:
#    - Application Settings → Comm Links
#    - Add UDP connection (port 14550, listening mode)
#    - Device auto-appears when HEARTBEAT sent

# ============================================================================
# Alternative: Runtime Configuration (No Build-Time Defaults)
# ============================================================================

# If you prefer to configure WiFi at runtime (via MAVLink parameters):
# 1. Leave WIFI_SSID empty in .env or don't create .env file
# 2. Build and flash firmware
# 3. Connect via UART (115200 baud)
# 4. Use QGroundControl Parameters tab:
#    - NET_SSID = "YourNetwork"
#    - NET_PASS = "YourPassword"
# 5. Reboot device
# 6. Device connects to WiFi using runtime parameters

# ============================================================================
# Configuration Examples
# ============================================================================

# Example 1: Home network with DHCP (recommended)
# WIFI_SSID=MyHomeNetwork
# WIFI_PASSWORD=SecurePassword123
# WIFI_DHCP=true

# Example 2: Static IP configuration
# WIFI_SSID=FieldNetwork
# WIFI_PASSWORD=DronePassword456
# WIFI_DHCP=false
# WIFI_IP=192.168.1.100
# WIFI_NETMASK=255.255.255.0
# WIFI_GATEWAY=192.168.1.1

# Example 3: UART-only mode (no WiFi)
# Leave WIFI_SSID empty:
# WIFI_SSID=
# Device will operate in UART-only mode

# ============================================================================
# Security Best Practices
# ============================================================================

# - Use strong WiFi passwords (minimum 12 characters)
# - Never commit .env to version control (already in .gitignore)
# - Use device-specific WiFi network for sensitive deployments
# - Consider using runtime configuration for production
# - Enable WPA2 or WPA3 on your WiFi network
# - Regularly update WiFi passwords
# - Use physical device security (locked enclosure)

# ============================================================================
# Troubleshooting
# ============================================================================

# Build shows "Using WIFI_SSID from environment"?
# → .env is being loaded correctly

# Build shows no WiFi warnings?
# → .env not found or WIFI_SSID is empty

# Device won't connect to WiFi?
# → Check defmt logs for connection errors
# → Verify SSID and password are correct
# → Ensure 2.4 GHz WiFi (CYW43439 does not support 5 GHz)

# Want to change WiFi after flashing?
# → Connect via UART and update NET_SSID/NET_PASS parameters
# → Changes persist in Flash across reboots

# For detailed troubleshooting:
# See docs/wifi-configuration.md
