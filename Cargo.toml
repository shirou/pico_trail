[package]
authors = ["shirou <shirou.faw@gmail.com>"]
name = "pico_trail"
edition = "2021"
version = "0.1.0"
license = "BSD-2-Clause"
description = "Embedded autopilot system for Raspberry Pi Pico W and Pico 2 W"
repository = "https://github.com/shirou/pico_trail"
readme = "README.md"
keywords = ["embedded", "autopilot", "raspberry-pi-pico", "rover", "mavlink"]
categories = ["embedded", "no-std"]


# Binary targets will be added as needed for platform testing and main autopilot
# Example:
# [[bin]]
# name = "platform_test"
# path = "src/bin/platform_test.rs"
# test = false

[lib]
# harness = false is only needed for no_std embedded targets
# For host tests, we need the default test harness
# harness = false

# needed for each integration test
# Note: Integration tests are only for embedded targets (require pico2_w feature)
[[test]]
name = "integration"
harness = false
required-features = ["pico2_w"]

[dependencies]
cortex-m = { version = "0.7", optional = true }
cortex-m-rt = { version = "0.7", optional = true }
defmt = { version = "1.0", optional = true }
defmt-rtt = { version = "1.0", optional = true }
panic-probe = { version = "1.0", features = ["print-defmt"], optional = true }

# Embassy async framework (FR-5inw2: Task Scheduler)
# Using git version to fix RP2350 MPU stack guard issue
# PR #4688 (merged 2025-09-21) replaced MPU with msplim register for Cortex-M33
# See: https://github.com/embassy-rs/embassy/pull/4688
# TODO: Switch back to released version once embassy-rp 0.9+ is published
embassy-executor = { git = "https://github.com/embassy-rs/embassy", features = ["arch-cortex-m", "executor-thread"], optional = true }
embassy-time = { git = "https://github.com/embassy-rs/embassy", features = ["tick-hz-1_000_000"], optional = true }
embassy-rp = { git = "https://github.com/embassy-rs/embassy", features = ["time-driver"], optional = true }
embassy-usb = { git = "https://github.com/embassy-rs/embassy", optional = true }
embassy-sync = { git = "https://github.com/embassy-rs/embassy", optional = true }
embassy-futures = { git = "https://github.com/embassy-rs/embassy", optional = true }
embassy-net = { git = "https://github.com/embassy-rs/embassy", features = ["tcp", "udp", "dhcpv4", "dns"], optional = true }

# WiFi driver for Pico W/2W (CYW43439)
# Using git version to match Embassy dependencies
cyw43 = { git = "https://github.com/embassy-rs/embassy", features = ["firmware-logs"], optional = true }
cyw43-pio = { git = "https://github.com/embassy-rs/embassy", optional = true }

# Static cell for embassy static variables
static_cell = { version = "2.1", optional = true }

# heapless for no_std collections (required for parameter storage)
heapless = "0.8"

# Synchronization primitives
# Implementation provided by cortex-m's critical-section-single-core feature
critical-section = "1.2"

# CRC calculation for Flash parameter storage (no_std compatible)
crc = { version = "3.2", default-features = false }

# Bitflags for parameter flags
bitflags = "2.6"

# MAVLink 2.0 protocol (FR-gpzpz: MAVLink Protocol)
mavlink = { version = "0.13", default-features = false, features = ["embedded", "common"] }
embedded-io-async = "0.6"

# AHRS subsystem dependencies (FR-eyuh8: AHRS Attitude Estimation)
nalgebra = { version = "0.33", default-features = false, features = ["libm"] }
micromath = "2.1"

# Platform HALs (optional, enabled via features)
rp235x-hal = { version = "0.3.0", optional = true }
embedded-hal = { version = "0.2.7", features = ["unproven"], optional = true }
embedded-hal-1 = { package = "embedded-hal", version = "1.0", optional = true }
nb = { version = "1.1.0", optional = true }
fugit = { version = "0.3.7", optional = true }

[dev-dependencies]
defmt-test = "0.3"

# Host-only test dependencies (not used for embedded targets)
[target.'cfg(not(target_arch = "arm"))'.dev-dependencies]
critical-section = { version = "1.2", features = ["std"] }
tokio = { version = "1", features = ["rt", "macros"] }

# cargo build/run
[profile.dev]
# default is opt-level = '0', but that makes very
# verbose machine code
opt-level = 's'
# trade compile speed for slightly better optimisations
codegen-units = 1

# cargo build/run --release
[profile.release]
# default is opt-level = '3', but that makes quite
# verbose machine code
opt-level = 's'
# trade compile speed for slightly better optimisations
codegen-units = 1
# Use Link Time Optimisations to further inline things across
# crates
# Note: 'fat' LTO causes bitcode loading issues with rp235x-hal 0.3.0
# Using 'thin' instead for better compatibility
lto = 'thin'
# Leave the debug symbols in (default is no debug info)
debug = 2

[features]
default = []
pico2_w = [
    "cortex-m", "cortex-m-rt", "defmt", "defmt-rtt",
    "panic-probe", "rp235x-hal",
    "embedded-hal", "embedded-hal-1", "nb", "fugit",
    "embassy-executor", "embassy-time", "embassy-rp", "embassy-usb",
    "embassy-sync", "embassy-futures", "embassy-net",
    "cyw43", "cyw43-pio", "static_cell",
    "embassy-rp/rp235xa", "embassy-rp/critical-section-impl", "embassy-rp/binary-info"
]
mock = []
