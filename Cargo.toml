[package]
authors = ["shirou <shirou.faw@gmail.com>"]
name = "pico_trail"
edition = "2024"
version = "0.1.0"
license = "BSD-2-Clause"
description = "Embedded autopilot system for Raspberry Pi Pico W and Pico 2 W"
repository = "https://github.com/shirou/pico_trail"
readme = "README.md"
keywords = ["embedded", "autopilot", "raspberry-pi-pico", "rover", "mavlink"]
categories = ["embedded", "no-std"]


# Binary targets will be added as needed for platform testing and main autopilot
# Example:
# [[bin]]
# name = "platform_test"
# path = "src/bin/platform_test.rs"
# test = false

[lib]
# harness = false is only needed for no_std embedded targets
# For host tests, we need the default test harness
# harness = false

# needed for each integration test
[[test]]
name = "integration"
harness = false

[dependencies]
cortex-m = { version = "0.7", features = ["critical-section-single-core"], optional = true }
cortex-m-rt = { version = "0.7", optional = true }
defmt = { version = "1.0", optional = true }
defmt-rtt = { version = "1.0", optional = true }
panic-probe = { version = "1.0", features = ["print-defmt"], optional = true }
semihosting = { version = "0.1.20", optional = true }

# Platform HALs (optional, enabled via features)
rp235x-hal = { version = "0.3.0", optional = true }
embedded-hal = { version = "0.2.7", features = ["unproven"], optional = true }
nb = { version = "1.1.0", optional = true }
fugit = { version = "0.3.7", optional = true }

[dev-dependencies]
defmt-test = "0.3"

# cargo build/run
[profile.dev]
# default is opt-level = '0', but that makes very
# verbose machine code
opt-level = 's'
# trade compile speed for slightly better optimisations
codegen-units = 1

# cargo build/run --release
[profile.release]
# default is opt-level = '3', but that makes quite
# verbose machine code
opt-level = 's'
# trade compile speed for slightly better optimisations
codegen-units = 1
# Use Link Time Optimisations to further inline things across
# crates
lto = 'fat'
# Leave the debug symbols in (default is no debug info)
debug = 2

[features]
default = []
pico2_w = [
    "cortex-m", "cortex-m-rt", "defmt", "defmt-rtt",
    "panic-probe", "semihosting", "rp235x-hal",
    "embedded-hal", "nb", "fugit"
]
mock = []
